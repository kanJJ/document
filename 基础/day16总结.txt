1,ArrayList(掌握)
	(1)存储字符串,去除重复的元素
	(2)存储自定义对象,去除重复的元素
2,LinkedList(掌握)
	(1)特有的方法
		addFirst(Object obj)和addLast(Object obj)
		getFirst()和getLast()
		removeFirst()和removeLast()
	(2)栈和队列
		栈:先进后出
		队列:先进先出
	(3)模拟栈结构,定义一个类似集合的类
3,泛型
	要求:会使用
	泛型必须是引用数据类型
	List<Integer>
	(1)泛型类定义
		格式:
			class 类名<T> {}
				继承接口时:
					class 类名  implements  接口 <指定类型>      推荐
					class 类名 <T> implemnts 接口 <T>    可定义任意类型类
	(2)泛型方法定义
		格式 

			修饰符 <T> 返回值类型 方法名(T t) {}
				注意事项:
					1.方法定义时,可以不加泛型
					2.若方法定义泛型,将会覆盖类的泛型,也就是说切断了方法形参类型与类定义类型之间的关系
					3.静态方法泛型必须和类的泛型不同,要么覆盖,要么从新定义泛型
	(3)泛型接口定义
		格式:
			interface 接口名<T> {}
4,JDK5的新特性(掌握)
	(1)增强for循环
		格式:
			for(数组或者集合里元素的数据类型 变量名 : 数组名或者集合名) {}
		注意事项:
			底层实现是迭代器,只能遍历,不能增删
	(2)静态导入(了解)
		格式:
			import static 包名.类名.方法名;
	(3)可变参数
		格式:
			修饰符 返回值类型 方法名(数据类型 ... 变量名) {}
		注意事项:
			A:其实是一个数组
			B:如果一个方法有多个参数的话,可变参数必须方法最后
	
5,集合的三种遍历方式是否支持删除
	普通for循环:可以,remove(int index)
	迭代器:可以,但是必须使用迭代器自己的删除方法
	增强for循环,不行,只能遍历
6,数组转换为集合
	转换的集合的长度不能改变
	好处:
		可以使用集合的方法
7,集合的嵌套使用
		