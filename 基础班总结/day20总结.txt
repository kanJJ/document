1,流的分类:
	(1)按操作类型分:
		字节流
		字符流
	(2)按流向分:
		输入流
		输出流
	(3)字节流的超类
		InputStream(字节输入流)
		OutputStream(字节输出流)
	(4)字符流的超类
		Reader(字符输入流)
		Writer(字符输出流)
2,FileInputStream
	FileInputStream(String name)
	FileInputStream(File file)

	int read()//读取一个字节
	int read(byte[] arr)//读取一个小数组长度的数据,返回值表示有效的字节个数
	close()//关闭流或者释放资源
3,FileOutputStream
	FileOutputStream(String name)
	FileOutputStream(String name, boolean append)
	FileOutputStream(File file)
	FileOutputStream(File file, boolean append)

	write(int b)//写入一个字节
	write(byte[] arr,int a, int len)//写入指定数组长度的字节数据
	close()//关闭流或者释放资源
4,重点代码
	(1)每次拷贝一个字节数据
		FileInputStream fis = new FileInputStream("");
		FileOutputStream fos = new FileOutputStream(new File(""));
		int b;
		while((b = fis.read()) != -1) {
			fos.write(b);
		}
		fis.close();
		fos.close();
	(2)每次拷贝一个小数组大小的数据
		FileInputStream fis = new FileInputStream("");
		FileOutputStream fos = new FileOutputStream(new File(""));
		byte[] arr = new byte[1024 * 8];
		int len;
		while((len = fis.read(arr)) != -1) {
			fos.write(arr,0,len);
		}
		fis.close();
		fos.close();
	(3)高效的数据拷贝
		BufferedInputStream bis = new BufferedInputStream(new FileInputStream(""));
		BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(new File("")));
		
		int b;
		while((b = bis.read()) != -1) {
			bos.write(b);
		}
		bis.close();
		bos.close();